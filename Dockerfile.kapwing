# Copyright 2019 The MediaPipe Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM ubuntu:18.04 as mediapipe

MAINTAINER <mediapipe@google.com>

WORKDIR /io
WORKDIR /mediapipe

ENV DEBIAN_FRONTEND=noninteractive

ARG deadsnakesppa=/etc/apt/sources.list.d/deadsnakes-ubuntu-ppa-hirsuite.list

RUN apt update && apt install -y software-properties-common 
RUN add-apt-repository ppa:deadsnakes/ppa 

RUN apt update && apt install -y curl python3.9 python3.9-dev python3.9-distutils && rm -rf /var/lib/apt/lists/*
RUN curl -s https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
  python3.9 get-pip.py --force-reinstall && \
  rm get-pip.py

RUN python3.9 -m pip install --upgrade pip setuptools pipenv wheel

RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        gcc-8 g++-8 \
        ca-certificates \
        curl \
        ffmpeg \
        git \
        wget \
        unzip \
        python3-opencv \
        libopencv-core-dev \
        libopencv-highgui-dev \
        libopencv-imgproc-dev \
        libopencv-video-dev \
        libopencv-calib3d-dev \
        libopencv-features2d-dev \
        software-properties-common && \
    add-apt-repository -y ppa:openjdk-r/ppa && \
    apt-get update && apt-get install -y openjdk-8-jdk && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8
RUN pip3 install --upgrade setuptools
RUN pip3 install wheel
RUN pip3 install future
RUN pip3 install six==1.14.0
RUN pip3 install tensorflow
# ==1.14.0
RUN pip3 install tf_slim

RUN ln -s /usr/bin/python3.9 /usr/bin/python

# Install bazel
ARG BAZEL_VERSION=5.2.0
RUN mkdir /bazel && \
    wget --no-check-certificate -O /bazel/installer.sh "https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/b\
azel-${BAZEL_VERSION}-installer-linux-x86_64.sh" && \
    wget --no-check-certificate -O  /bazel/LICENSE.txt "https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE" && \
    chmod +x /bazel/installer.sh && \
    /bazel/installer.sh  && \
    rm -f /bazel/installer.sh

RUN mkdir -p /mediapipe/examples
COPY .bazelrc .bazelversion WORKSPACE BUILD.bazel MANIFEST.in /mediapipe/

COPY mediapipe /mediapipe/mediapipe
COPY third_party /mediapipe/third_party


RUN bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 --action_env PYTHON_LIB_PATH=/usr/local/lib/python3.9 --action_env PYTHON_BIN_PATH=/usr/bin/python3.9 mediapipe/examples/custom/object_box_tracking:object_box_tracking


FROM ubuntu:18.04 as kapwing_mediapipe

RUN mkdir -p /mediapipe

COPY --from=mediapipe /mediapipe/bazel-bin/mediapipe/examples/custom/object_box_tracking/object_box_tracking /mediapipe/
COPY --from=mediapipe /mediapipe/mediapipe/models/ssdlite_object_detection.tflite /mediapipe/models/
COPY --from=mediapipe /mediapipe/mediapipe/models/ssdlite_object_detection_labelmap.txt /mediapipe/models/
COPY --from=mediapipe /mediapipe/bazel-bin/mediapipe/examples/custom/autoflip/run_custom_autoflip /mediapipe/
COPY --from=mediapipe /mediapipe/mediapipe/modules/face_detection/face_detection_full_range_sparse.tflite /mediapipe/modules/face_detection/
